#summary ディスカッションのサマリを残していく

=2/20=
==サマリ==
 * 入荷予約受け付け、入荷予約のシナリオ（ユースケース）についてRv
  * ドメインエキスパートがいないので、内容の確認は次回もしくはオフラインで
  * だいたいの内容はこんな感じでOK
  * アクターが欲しい
  * 入出力がもう少しはっきりすると良い
 * とりあえず、イベントをどう管理するかだが、暫定的にDDD本のサンプルのように、発生したイベントの履歴をもつようにしてみることに

 * 暫定のクラス図
[http://farm5.static.flickr.com/4050/4395961031_4952cdcf06.jpg]

 * オブジェクト図
[http://farm5.static.flickr.com/4050/4395961031_4952cdcf06.jpg]

 * その他
  * シナリオはWiki（UseCases）に移動する
  * マイルストーンはWiki＋Issueで管理する
  * 開発ルールを決めよう => とりあえずIssueに登録

=1/23=
==サマリ==

 * 倉庫の基本的な要件について確認
  * 物流専門の会社ではなく、製品を生産している会社が内部に保持する倉庫が対象。
    * サxトリーなどの飲料メーカーなど
  * *物品*としては、今回は主に自社生産した製品を扱うが、原材料でも問題なく扱えるようにしたい。
  * 物品を管理する単位は*ロット*。
  * ロットが振られている箱を*バラして*出荷することもある。
  * 基本的なアルゴリズムは先入先出
    * 入荷日ではなく、ロットの若い順に出荷する
    * ロットを指定して出荷することもある。
  * 経年劣化について
    * 経年劣化の管理は別システムで行って良い。
    * その場合、このシステムには出荷指示という形でイベントが発生する。

 * 入荷〜出庫までの流れで登場するアクタと役割を確認
  * 入荷受付
    * この時点で入荷できないことが明白な場合、受付の時点で断ることがある。
  * 入荷
    * 入荷したものをすぐに検品出来るとは限らない。*入荷済みだが未検品*状態は管理できる必要がある。
  * 検品
    * 入荷受付したときの情報と突き合わせ。
    * 検品エラーの物品でも入庫できる場合がある。例：単純に個数が足りない場合
  * 入庫
    * 検品を通過したものを倉庫に置く。
    * 棚に入れる際には効率を考える。
  * これら4つの作業は、別々のロールとして定義する。
    * 同じ人物が担当することも、違う人物が担当することもできるようにする。

 * 次回までにやること
   * 入荷受付、入荷、検品、入庫の担当者を決め、それぞれでシナリオを作ってくる
     * シナリオを作ると同時に、疑問点をまとめて持ってくる
   * 可能であれば、ざっくりモデルを作ってくる
   * さらに可能であれば、それを実装してみる
   * Slim3のブランクプロジェクト作成

 * 共有した倉庫管理のイメージ2
[http://farm3.static.flickr.com/2789/4305531268_877b175a3f.jpg]

 * モデルみたいなもの
[http://farm5.static.flickr.com/4020/4304782507_0610d7dacb_o.jpg]


----

=12/12=

==サマリ==
 * 「入庫する」のユースケースに絞って、基本的なクラスを作成した。
 * 以下の内容を決定した。
   * オフラインタスクをGoogleCodeのIssueに登録し、PMが消化計画を立てる。
   * 上記と同時に、主要なマイルストーンを決定する。

==主な経過==
 * 最初に物品（Item）を作り、物品を格納するためのパレット（Palette/PaletteTest）を作っていったが、DEに確認したところ、今回はパレット単位で（パレットごと）倉庫に格納するのではなく、物品をパレットから下ろして倉庫に格納すれば良いとのこと。
 * 入庫にはパレットは不要となったため、パレットを廃棄し、かわりに棚（Shelf）を作成。
 * 棚を作っている途中で、現段階では入庫にあたっては棚は不要ではないか、という話になったため、棚を廃棄して倉庫（Warehouse）を作成。
   * 棚は後から再登場するかもしれないが、現段階では不要と思われた
 * 倉庫を作っている途中で時間切れ。
 * 次回までの間にオフラインタスクとして雑多なことを整理しておき、次回ミーティングではドメインの洗練に時間を割けるようにしよう、という話に。

=11/26=
==サマリ==
 * 要件を読み込み、倉庫管理のイメージ、システムの要件、基本的なクラスのイメージを共有した。
 * 今後は、最低限のクラスを使って以下のシナリオを進めていくこととした。
   * 物品を倉庫に入れる（入庫する）
   * 検品する
   * 入荷を受け付ける
   * 出庫する

 * 共有した倉庫管理のイメージ
[http://farm3.static.flickr.com/2564/4178072684_36a7a94ba6.jpg]

 * 「入庫」シナリオに必要なクラス（仮）
[http://farm3.static.flickr.com/2760/4178072620_001fcb6d5b.jpg]

 * TODO
[http://farm3.static.flickr.com/2489/4178072562_92922a873b.jpg]